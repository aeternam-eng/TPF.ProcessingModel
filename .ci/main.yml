trigger:
  branches:
    include:
      - main

pool: Azure.Pool.Stronzo

resources:
  repositories:
    - repository: templates
      type: git
      name: Stronzo.TPF.Infrastructure

variables:
  - group: Stronzo - General IaC
  - group: Stronzo - TPF.ProcessingModel - Dev
  - name: buildDirectory
    value: $(Build.ArtifactStagingDirectory)/build
  - name: outputDir
    value: $(Build.ArtifactStagingDirectory)
  - name: downloadedPackageDirectory
    value: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
  - name: namespace
    value: stronzo-tapegandofogo
  - name: appName
    value: processingmodel
  - name: pythonVersion
    value: '3.9'
  - name: aimodelVersion
    value: '1.0.2'

stages:
  - stage: "build"
    displayName: "Build"
    jobs:
      - job: "build"
        displayName: "Build"
        pool:
          name: Azure.Pool.Stronzo
      
        steps:
          - task: UsePythonVersion@0
            name: pyVersion
            inputs:
              versionSpec: $(pythonVersion)
              addToPath: true
              architecture: "x64"

          - task: Cache@2
            inputs:
              key: 'ai-model-$(aimodelVersion)'
              path: '$(System.ArtifactsDirectory)/model'
              cacheHitVar: 'hasAiModel'

          - task: DownloadPackage@1
            condition: not(eq(variables.hasAiModel, 'true'))
            inputs:
              packageType: 'upack'
              feed: '/e1ea829c-6ca3-4442-9e79-b9d06a6782f7'
              view: 
              definition: '7ea22459-192d-42c0-8f4b-5f1c26a7a9cf'
              version: '$(aimodelVersion)'
              downloadPath: $(System.ArtifactsDirectory)/model

          - task: CopyFiles@2
            displayName: Copy keras model
            inputs:
              SourceFolder: "$(System.ArtifactsDirectory)/model"
              Contents: "*.tflite"
              TargetFolder: $(buildDirectory)
              CleanTargetFolder: true

          - task: CopyFiles@2
            displayName: Copy api files
            inputs:
              SourceFolder: "$(Build.SourcesDirectory)/src"
              Contents: "**"
              TargetFolder: $(buildDirectory)
              CleanTargetFolder: false

          - script: |
              python -m venv antenv
              source antenv/bin/activate
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            workingDirectory: $(buildDirectory)
            displayName: "Install requirements"

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: $(buildDirectory)
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(outputDir)/$(Build.BuildId).zip
              replaceExistingArchive: true
              
          - publish: $(outputDir)
            displayName: 'Publish artifact'
            artifact: drop

  - template: deployment.yml
    parameters:
      environment: dev
      dependsOn: Build
      namespace: $(namespace)
      appName: $(appName)
      subscription: StronzoDefaultSubscription
      packageDirectory: $(downloadedPackageDirectory)
