trigger:
  branches:
    include:
      - main

variables:
  buildDirectory: '$(Build.ArtifactStagingDirectory)/build'
  outputDir: $(Build.ArtifactStagingDirectory)
  downloadedPackageDirectory: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
  serviceName: 'stronzo-tapegandofogo-processingmodel'
  pythonVersion: '3.9'
  poolName: Azure.Pool.Stronzo

stages:
  - stage: "build"
    displayName: "Build"
    jobs:
      - job: "build"
        displayName: "Build"
        pool:
          name: Azure.Pool.Stronzo
      
        steps:
          - task: UsePythonVersion@0
            name: pyVersion
            inputs:
              versionSpec: $(pythonVersion)
              addToPath: true
              architecture: "x64"

          - task: Cache@2
            inputs:
              key: 'ai-model'
              path: '$(System.ArtifactsDirectory)/model'
              cacheHitVar: 'hasAiModel'

          - task: DownloadPackage@1
            condition: not(eq(variables.hasAiModel, 'true'))
            inputs:
              packageType: 'upack'
              feed: '/e1ea829c-6ca3-4442-9e79-b9d06a6782f7'
              view: 
              definition: '7ea22459-192d-42c0-8f4b-5f1c26a7a9cf'
              version: '1.0.1'
              downloadPath: $(System.ArtifactsDirectory)/model

          - task: CopyFiles@2
            displayName: Copy keras model
            inputs:
              SourceFolder: "$(System.ArtifactsDirectory)/model"
              Contents: "*.tflite"
              TargetFolder: $(buildDirectory)
              CleanTargetFolder: true

          - task: CopyFiles@2
            displayName: Copy api files
            inputs:
              SourceFolder: "$(Build.SourcesDirectory)/src"
              Contents: "**"
              TargetFolder: $(buildDirectory)
              CleanTargetFolder: false

          - script: |
              python -m venv antenv
              source antenv/bin/activate
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            workingDirectory: $(buildDirectory)
            displayName: "Install requirements"

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: $(buildDirectory)
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(outputDir)/$(Build.BuildId).zip
              replaceExistingArchive: true
          
          - task: ArchiveFiles@2
            displayName: "Zip IaC Files"
            inputs:
              rootFolderOrFile: "$(Build.SourcesDirectory)/.iac"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(outputDir)/terraform-files.zip"
              replaceExistingArchive: false
              
          - publish: $(outputDir)
            displayName: 'Publish artifact'
            artifact: drop

  - template: deployment.yml
    parameters:
      pool: $(poolName)
      environment: Development
      shortEnv: dev
      dependsOn: Build
      variables:
        - group: "Stronzo - TaPegandoFogo"
        - name: ARM_ACCESS_KEY
          value: $(IacStorageAccountAccessKey)
      subscription: "Azure for Students(2fcfcc58-7a29-4b99-838f-93fa031f18a5)"
      serviceName: $(serviceName)
      packageDirectory: $(downloadedPackageDirectory)
      terraformFilesPath: terraform-files.zip
